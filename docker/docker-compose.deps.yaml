services:
  api-db:
    image: postgres
    container_name: api-db
    ports:
      - 5433:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-api_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-somePassword}
      POSTGRES_DB: ${POSTGRES_DB:-api}

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"

  # Note: If you are assigning a custom name to your db service on the line below, make sure it does not contain underscores
  supertokens-db:
    image: "postgres:latest"
    container_name: supertokens-db
    environment:
      POSTGRES_USER: supertokens_user
      POSTGRES_PASSWORD: somePassword
      POSTGRES_DB: supertokens
    ports:
      - 5432:5432
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "supertokens_user", "-d", "supertokens" ]
      interval: 5s
      timeout: 5s
      retries: 5

  supertokens:
    image: registry.supertokens.io/supertokens/supertokens-postgresql:9.0.2
    container_name: supertokens-core
    depends_on:
      supertokens-db:
        condition: service_healthy
    ports:
      - 3567:3567
    environment:
      POSTGRESQL_CONNECTION_URI: "postgresql://supertokens_user:somePassword@supertokens-db:5432/supertokens"
    restart: unless-stopped
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    image: ghcr.io/spyrosmoux/flowforge-web
    ports:
      - "3000:80"
