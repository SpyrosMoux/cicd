---
networks:
  cicd_net:

services:
  traefik:
    image: traefik:2.10.7
    container_name: traefik
    restart: unless-stopped
    volumes:
      - ${PWD}/traefik:/etc/traefik
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/log/traefik/:/var/log/
    networks:
      - cicd_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`flowforge.spyrosmoux.com`) && (PathPrefix(`/traefik`) || PathPrefix(`/api`))"
      - "traefik.http.routers.traefik.entrypoints=https"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik.middlewares=traefik-strip"
      - "traefik.http.middlewares.traefik-strip.stripprefix.prefixes=/traefik"
    ports:
      - "443:443"
    command:
      - "--api"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--entrypoints.http=false"
      - "--entrypoints.http.http.redirections.entrypoint.to=https"
      - "--entrypoints.http.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.https=true"
      - "--entrypoints.https.address=:443"
      - "--certificatesResolvers.letsencrypt.acme.email=spirosgsaaa@gmail.com"
      - "--certificatesResolvers.letsencrypt.acme.storage=/etc/traefik/acme.json"
      - "--certificatesResolvers.letsencrypt.acme.httpChallenge.entryPoint=https"
      - "--log=true"
      - "--log.level=ERROR"
      - "--log.filePath=/var/log/traefik.log"
      - "--accesslog=true"
      - "--accesslog.filepath=/var/log/access.log"

  api-db:
    image: postgres
    container_name: api-db
    ports:
      - 5433:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-api_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-somePassword}
      POSTGRES_DB: ${POSTGRES_DB:-api}
    networks:
      - cicd_net

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - cicd_net

  web:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`flowforge.spyrosmoux.com`) && PathPrefix(`/`)"
      - "traefik.http.routers.web.entrypoints=https"
      - "traefik.http.routers.web.tls=true"
      - "traefik.http.routers.web.tls.certresolver=letsencrypt"
    image: ghcr.io/spyrosmoux/flowforge-web
    ports:
      - "3000:80"
    networks:
      - cicd_net

  runner:
    container_name: runner
    image: ghcr.io/spyrosmoux/cicd/runner
    build:
      context: ..
      dockerfile: docker/Dockerfile.runner
    env_file:
      - ../.env.docker
    networks:
      - cicd_net
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  api:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`flowforge.spyrosmoux.com`) && PathPrefix(`/app/cicd/api`)"
      - "traefik.http.routers.api.entrypoints=https"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"
    container_name: api
    image: ghcr.io/spyrosmoux/cicd/api
    build:
      context: ..
      dockerfile: docker/Dockerfile.api
    ports:
      - "8080:8080"
    env_file:
      - ../.env.docker
    networks:
      - cicd_net
